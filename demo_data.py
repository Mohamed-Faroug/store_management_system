# -*- coding: utf-8 -*-
"""
ุฅุถุงูุฉ ุงูุจูุงูุงุช ุงูุชุฌุฑูุจูุฉ
ูุธุงู ุฅุฏุงุฑุฉ ุงููุฎุฒูู - ูุฎุฒู ุงูุฒููุฉ

ุฌููุน ุงูุญููู ูุญููุธุฉ ยฉ 2025
ุชู ุชุทููุฑ ูุฐุง ุงููุธุงู ุจูุงุณุทุฉ: ูุญูุฏ ูุงุฑูู
ุชุงุฑูุฎ ุขุฎุฑ ุชุญุฏูุซ: 9/9/2025
"""

import sqlite3
from datetime import datetime, timedelta
import random

def add_demo_data():
    """ุฅุถุงูุฉ ุจูุงูุงุช ุชุฌุฑูุจูุฉ ุดุงููุฉ"""
    try:
        # ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช
        conn = sqlite3.connect('inventory.db')
        cursor = conn.cursor()
        
        print("๐ ุจุฏุก ุฅุถุงูุฉ ุงูุจูุงูุงุช ุงูุชุฌุฑูุจูุฉ...")
        
        # ุฅุถุงูุฉ ุฃุตูุงู ุชุฌุฑูุจูุฉ
        add_demo_items(cursor)
        
        # ุฅุถุงูุฉ ูุจูุนุงุช ุชุฌุฑูุจูุฉ
        add_demo_sales(cursor)
        
        # ุฅุถุงูุฉ ููุงุชูุฑ ุชุฌุฑูุจูุฉ
        add_demo_invoices(cursor)
        
        # ุฅุถุงูุฉ ูุดุชุฑูุงุช ุชุฌุฑูุจูุฉ
        add_demo_purchases(cursor)
        
        # ุญูุธ ุงูุชุบููุฑุงุช
        conn.commit()
        conn.close()
        
        print("โ ุชู ุฅุถุงูุฉ ุงูุจูุงูุงุช ุงูุชุฌุฑูุจูุฉ ุจูุฌุงุญ!")
        
    except Exception as e:
        print(f"โ ุฎุทุฃ ูู ุฅุถุงูุฉ ุงูุจูุงูุงุช ุงูุชุฌุฑูุจูุฉ: {str(e)}")

def add_demo_items(cursor):
    """ุฅุถุงูุฉ ุฃุตูุงู ุชุฌุฑูุจูุฉ"""
    print("๐ฆ ุฅุถุงูุฉ ุฃุตูุงู ุชุฌุฑูุจูุฉ...")
    
    demo_items = [
        # ุฅุทุงุฑุงุช
        ('ุฅุทุงุฑ ุจุฑูุฏุฌุณุชูู 205/55R16', 1, 'BRIDGE-001', 'ุฅุทุงุฑ ุจุฑูุฏุฌุณุชูู ุนุงูู ุงูุฌูุฏุฉ', 50, 10, 800.0, 1200.0),
        ('ุฅุทุงุฑ ููุดูุงู 215/60R17', 1, 'MICHELIN-002', 'ุฅุทุงุฑ ููุดูุงู ููุทุฑู ุงููุนุฑุฉ', 30, 5, 900.0, 1400.0),
        ('ุฅุทุงุฑ ูููุชูููุชุงู 225/50R18', 1, 'CONTINENTAL-003', 'ุฅุทุงุฑ ูููุชูููุชุงู ุฑูุงุถูุฉ', 25, 5, 1000.0, 1600.0),
        
        # ุฒููุฉ ุฎุงุฑุฌูุฉ
        ('ูุตุฏ ุฃูุงูู ูุงุฑุจูู', 2, 'BUMPER-001', 'ูุตุฏ ุฃูุงูู ูู ุฃููุงู ุงููุฑุจูู', 15, 3, 500.0, 800.0),
        ('ุดุจู ุฃูุงูู ุฑูุงุถูุฉ', 2, 'GRILLE-002', 'ุดุจู ุฃูุงูู ุจุชุตููู ุฑูุงุถู', 20, 5, 200.0, 350.0),
        ('ุฌูุงุญ ุฎููู', 2, 'SPOILER-003', 'ุฌูุงุญ ุฎููู ุฑูุงุถู', 10, 2, 300.0, 500.0),
        
        # ุฒููุฉ ุฏุงุฎููุฉ
        ('ููุนุฏ ุฑูุงุถู', 3, 'SEAT-001', 'ููุนุฏ ุฑูุงุถู ุฌูุฏู', 8, 2, 800.0, 1200.0),
        ('ุณุชูุฑูุฌ ุณุจูุฑุช', 3, 'STEERING-002', 'ุนุฌูุฉ ููุงุฏุฉ ุฑูุงุถูุฉ', 12, 3, 400.0, 600.0),
        ('ุจุณุงุท ุฃุฑุถู', 3, 'MAT-003', 'ุจุณุงุท ุฃุฑุถู ูุทุงุทู', 25, 5, 50.0, 80.0),
        
        # ุฅุถุงุกุฉ
        ('ููุจุฉ LED ุฃูุงููุฉ', 4, 'LED-001', 'ููุจุฉ LED ุนุงููุฉ ุงูุฅุถุงุกุฉ', 40, 10, 100.0, 150.0),
        ('ููุจุฉ LED ุฎูููุฉ', 4, 'LED-002', 'ููุจุฉ LED ุฎูููุฉ', 35, 8, 80.0, 120.0),
        ('ุฅุถุงุกุฉ ุฏุงุฎููุฉ LED', 4, 'LED-003', 'ุฅุถุงุกุฉ ุฏุงุฎููุฉ ูุชุนุฏุฏุฉ ุงูุฃููุงู', 20, 5, 60.0, 90.0),
        
        # ุตูุชูุงุช
        ('ุณูุงุนุฉ ุฃูุงููุฉ 6.5', 5, 'SPEAKER-001', 'ุณูุงุนุฉ ุฃูุงููุฉ ุนุงููุฉ ุงูุฌูุฏุฉ', 30, 5, 200.0, 300.0),
        ('ุณูุงุนุฉ ุฎูููุฉ 6x9', 5, 'SPEAKER-002', 'ุณูุงุนุฉ ุฎูููุฉ ูููุฉ', 25, 5, 250.0, 380.0),
        ('ุฃูุจูููุงูุฑ 4 ูููุงุช', 5, 'AMP-003', 'ุฃูุจูููุงูุฑ 4 ูููุงุช 1000 ูุงุช', 10, 2, 500.0, 750.0),
        
        # ุฃุฏูุงุช
        ('ููุชุงุญ ุฑุจุท 10-24', 6, 'WRENCH-001', 'ูุฌููุนุฉ ููุงุชูุญ ุฑุจุท', 50, 10, 30.0, 45.0),
        ('ููู ุจุฑุงุบู', 6, 'SCREWDRIVER-002', 'ูุฌููุนุฉ ููุงุชูุญ ุจุฑุงุบู', 40, 8, 25.0, 35.0),
        ('ููุงุดุฉ', 6, 'PLIERS-003', 'ููุงุดุฉ ูุชุนุฏุฏุฉ ุงูุงุณุชุฎุฏุงู', 35, 7, 40.0, 60.0),
        
        # ุฒููุช ูููุงุฏ ุชุดุญูู
        ('ุฒูุช ูุญุฑู 5W-30', 7, 'OIL-001', 'ุฒูุช ูุญุฑู ุนุงูู ุงูุฌูุฏุฉ', 100, 20, 80.0, 120.0),
        ('ุฒูุช ูุฑุงูู DOT4', 7, 'BRAKE-002', 'ุฒูุช ูุฑุงูู DOT4', 50, 10, 25.0, 40.0),
        ('ูุถุงุฏ ุชุฌูุฏ', 7, 'ANTIFREEZE-003', 'ูุถุงุฏ ุชุฌูุฏ ููุฑุงุฏูุงุชูุฑ', 30, 5, 35.0, 55.0),
        
        # ุจุทุงุฑูุงุช
        ('ุจุทุงุฑูุฉ 12V 60Ah', 8, 'BATTERY-001', 'ุจุทุงุฑูุฉ 12 ูููุช 60 ุฃูุจูุฑ', 20, 3, 400.0, 600.0),
        ('ุจุทุงุฑูุฉ 12V 70Ah', 8, 'BATTERY-002', 'ุจุทุงุฑูุฉ 12 ูููุช 70 ุฃูุจูุฑ', 15, 3, 450.0, 700.0),
        ('ุดุงุญู ุจุทุงุฑูุฉ', 8, 'CHARGER-003', 'ุดุงุญู ุจุทุงุฑูุฉ ุฐูู', 25, 5, 150.0, 220.0),
    ]
    
    for item in demo_items:
        cursor.execute('''
            INSERT INTO items (name, category_id, sku, description, quantity, reorder_level, cost_price, selling_price)
            VALUES (?, ?, ?, ?, ?, ?, ?, ?)
        ''', item)
    
    print(f"โ ุชู ุฅุถุงูุฉ {len(demo_items)} ุตูู ุชุฌุฑูุจู")

def add_demo_sales(cursor):
    """ุฅุถุงูุฉ ูุจูุนุงุช ุชุฌุฑูุจูุฉ"""
    print("๐ฐ ุฅุถุงูุฉ ูุจูุนุงุช ุชุฌุฑูุจูุฉ...")
    
    # ุงูุญุตูู ุนูู ุงูุฃุตูุงู
    cursor.execute('SELECT id, selling_price FROM items')
    items = cursor.fetchall()
    
    if not items:
        print("โ ูุง ุชูุฌุฏ ุฃุตูุงู ูุฅุถุงูุฉ ูุจูุนุงุช")
        return
    
    # ุฅุถุงูุฉ ูุจูุนุงุช ููู 30 ููู ุงููุงุถูุฉ
    for i in range(100):
        item_id, price = random.choice(items)
        quantity = random.randint(1, 5)
        total_price = quantity * price
        
        # ุชุงุฑูุฎ ุนุดูุงุฆู ูู ุงูู 30 ููู ุงููุงุถูุฉ
        days_ago = random.randint(0, 30)
        sale_date = datetime.now() - timedelta(days=days_ago)
        
        cursor.execute('''
            INSERT INTO sales (item_id, quantity, unit_price, total_price, final_price, created_at)
            VALUES (?, ?, ?, ?, ?, ?)
        ''', (item_id, quantity, price, total_price, total_price, sale_date.strftime('%Y-%m-%d %H:%M:%S')))
    
    print("โ ุชู ุฅุถุงูุฉ 100 ุนูููุฉ ุจูุน ุชุฌุฑูุจูุฉ")

def add_demo_invoices(cursor):
    """ุฅุถุงูุฉ ููุงุชูุฑ ุชุฌุฑูุจูุฉ"""
    print("๐งพ ุฅุถุงูุฉ ููุงุชูุฑ ุชุฌุฑูุจูุฉ...")
    
    # ุงูุญุตูู ุนูู ุงูุฃุตูุงู
    cursor.execute('SELECT id, selling_price FROM items')
    items = cursor.fetchall()
    
    if not items:
        print("โ ูุง ุชูุฌุฏ ุฃุตูุงู ูุฅุถุงูุฉ ููุงุชูุฑ")
        return
    
    customers = [
        ('ุฃุญูุฏ ูุญูุฏ', '01234567890'),
        ('ูุงุทูุฉ ุนูู', '01234567891'),
        ('ูุญูุฏ ุญุณู', '01234567892'),
        ('ุนุงุฆุดุฉ ุฃุญูุฏ', '01234567893'),
        ('ุนูู ูุญููุฏ', '01234567894'),
        ('ููุฑ ุงูุฏูู', '01234567895'),
        ('ุณุงุฑุฉ ูุญูุฏ', '01234567896'),
        ('ุฎุงูุฏ ุฃุญูุฏ', '01234567897'),
        ('ูุฑูู ุนูู', '01234567898'),
        ('ููุณู ุญุณู', '01234567899'),
    ]
    
    # ุฅุถุงูุฉ ููุงุชูุฑ ููู 30 ููู ุงููุงุถูุฉ
    for i in range(50):
        customer_name, customer_phone = random.choice(customers)
        payment_method = random.choice(['cash', 'card'])
        
        # ุชุงุฑูุฎ ุนุดูุงุฆู
        days_ago = random.randint(0, 30)
        invoice_date = datetime.now() - timedelta(days=days_ago)
        
        # ุฅูุดุงุก ุฑูู ูุงุชูุฑุฉ
        invoice_number = f"INV-{invoice_date.strftime('%Y%m%d')}-{i+1:03d}"
        
        # ุฅุถุงูุฉ ุงููุงุชูุฑุฉ
        cursor.execute('''
            INSERT INTO invoices (invoice_number, customer_name, customer_phone, payment_method, created_by, created_at)
            VALUES (?, ?, ?, ?, ?, ?)
        ''', (invoice_number, customer_name, customer_phone, payment_method, 1, invoice_date.strftime('%Y-%m-%d %H:%M:%S')))
        
        invoice_id = cursor.lastrowid
        
        # ุฅุถุงูุฉ ุฃุตูุงู ูููุงุชูุฑุฉ
        num_items = random.randint(1, 5)
        total_amount = 0
        
        for j in range(num_items):
            item_id, price = random.choice(items)
            quantity = random.randint(1, 3)
            item_total = quantity * price
            total_amount += item_total
            
            cursor.execute('''
                INSERT INTO sales (invoice_id, item_id, quantity, unit_price, total_price, final_price, created_at)
                VALUES (?, ?, ?, ?, ?, ?, ?)
            ''', (invoice_id, item_id, quantity, price, item_total, item_total, invoice_date.strftime('%Y-%m-%d %H:%M:%S')))
        
        # ุชุญุฏูุซ ุฅุฌูุงูู ุงููุงุชูุฑุฉ
        discount = random.randint(0, 50)
        tax = random.randint(0, 20)
        final_amount = total_amount - discount + tax
        
        cursor.execute('''
            UPDATE invoices 
            SET total_amount = ?, discount_amount = ?, tax_amount = ?, final_amount = ?
            WHERE id = ?
        ''', (total_amount, discount, tax, final_amount, invoice_id))
    
    print("โ ุชู ุฅุถุงูุฉ 50 ูุงุชูุฑุฉ ุชุฌุฑูุจูุฉ")

def add_demo_purchases(cursor):
    """ุฅุถุงูุฉ ูุดุชุฑูุงุช ุชุฌุฑูุจูุฉ"""
    print("๐ ุฅุถุงูุฉ ูุดุชุฑูุงุช ุชุฌุฑูุจูุฉ...")
    
    suppliers = [
        ('ุดุฑูุฉ ุงูุฅุทุงุฑุงุช ุงููุชุญุฏุฉ', '01234567001'),
        ('ูุคุณุณุฉ ุงูุฒููุฉ ุงููุชูุฏูุฉ', '01234567002'),
        ('ุดุฑูุฉ ุงูุตูุชูุงุช ุงูุญุฏูุซุฉ', '01234567003'),
        ('ูุคุณุณุฉ ุงูุฅุถุงุกุฉ ุงูุฐููุฉ', '01234567004'),
        ('ุดุฑูุฉ ุงูุฃุฏูุงุช ุงูููููุฉ', '01234567005'),
    ]
    
    # ุงูุญุตูู ุนูู ุงูุฃุตูุงู
    cursor.execute('SELECT id, cost_price FROM items')
    items = cursor.fetchall()
    
    if not items:
        print("โ ูุง ุชูุฌุฏ ุฃุตูุงู ูุฅุถุงูุฉ ูุดุชุฑูุงุช")
        return
    
    # ุฅุถุงูุฉ ูุดุชุฑูุงุช ููู 30 ููู ุงููุงุถูุฉ
    for i in range(30):
        supplier_name, supplier_phone = random.choice(suppliers)
        payment_method = random.choice(['cash', 'card'])
        
        # ุชุงุฑูุฎ ุนุดูุงุฆู
        days_ago = random.randint(0, 30)
        purchase_date = datetime.now() - timedelta(days=days_ago)
        
        # ุฅุถุงูุฉ ุฃูุฑ ุงูุดุฑุงุก
        cursor.execute('''
            INSERT INTO purchases (supplier_name, supplier_phone, payment_method, created_by, created_at)
            VALUES (?, ?, ?, ?, ?)
        ''', (supplier_name, supplier_phone, payment_method, 1, purchase_date.strftime('%Y-%m-%d %H:%M:%S')))
        
        purchase_id = cursor.lastrowid
        
        # ุฅุถุงูุฉ ุฃุตูุงู ููุดุฑุงุก
        num_items = random.randint(2, 8)
        total_amount = 0
        
        for j in range(num_items):
            item_id, cost_price = random.choice(items)
            quantity = random.randint(10, 50)
            item_total = quantity * cost_price
            total_amount += item_total
            
            cursor.execute('''
                INSERT INTO purchase_items (purchase_id, item_id, quantity, unit_cost, total_cost, created_at)
                VALUES (?, ?, ?, ?, ?, ?)
            ''', (purchase_id, item_id, quantity, cost_price, item_total, purchase_date.strftime('%Y-%m-%d %H:%M:%S')))
            
            # ุชุญุฏูุซ ูููุฉ ุงูุตูู
            cursor.execute('''
                UPDATE items 
                SET quantity = quantity + ?
                WHERE id = ?
            ''', (quantity, item_id))
        
        # ุชุญุฏูุซ ุฅุฌูุงูู ุงูุดุฑุงุก
        discount = random.randint(0, 100)
        tax = random.randint(0, 50)
        final_amount = total_amount - discount + tax
        
        cursor.execute('''
            UPDATE purchases 
            SET total_amount = ?, discount_amount = ?, tax_amount = ?, final_amount = ?
            WHERE id = ?
        ''', (total_amount, discount, tax, final_amount, purchase_id))
    
    print("โ ุชู ุฅุถุงูุฉ 30 ุฃูุฑ ุดุฑุงุก ุชุฌุฑูุจู")

if __name__ == "__main__":
    add_demo_data()
